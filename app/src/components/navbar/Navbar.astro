---
import { Astronav, MenuItems, Dropdown, DropdownItems, StickyHeader } from 'astro-navbar'

import { getLatestVersion, isAlpha } from '@argon/util/version'

import NavToggle from '@argon/components/navbar/NavToggle.astro'
import OptionsMenu from '@argon/components/navbar/options/OptionsMenu.tsx'
import Search from '@argon/components/input/Tags'

import '@argon/components/navbar/navbar.css'	
import '@argon/components/navbar/nav-button.css'
import '@argon/globals.css'

interface Props {
	isGallery: boolean
}
const { isGallery } = Astro.props

const version = getLatestVersion()
const alpha: boolean = isAlpha()
---

<StickyHeader transition:persist>
	<Astronav>
		<div class="navbar">
			<ul id="nav-info">
				<li class="nav-button-container">
					<Dropdown class="group more-dropdown">
						<button id="more-button" class="nav-button button">
							<img src="/icons/nav/hamburger.svg" alt="More" class="button-icon"/>
						</button>
						<DropdownItems class="nav-dropdown-items-container">
							<ul>
								<li class="nav-button-container">
									<a id="tags-button" class="nav-button button text focusable" href="tags">
										<img src="/icons/nav/tag.svg" alt="Tags" class="button-icon"/>
										Tags
									</a>
								</li>
								<li class="nav-button-container">
									<a id="random-button" class="nav-button button text focusable" href="random">
										<img src="/icons/nav/random.svg" alt="Random Post" class="button-icon"/>
										Random Post
									</a>
								</li>
								<li class="nav-button-container">
									<a id="changelog-button" class="nav-button button text focusable" href="changelog">
										<img src="/icons/nav/changelog.svg" alt="Changelog" class="button-icon"/>
										Changelog
									</a>
								</li>
							</ul>
						</DropdownItems>
					</Dropdown>
				</li>
				<li>
					<a class="logo" href="." tabindex="-1">
						<span id="text-mark">Argon</span>
						<span id="website-version">v{ version.data.version }{ alpha && '-alpha' }</span>
					</a>
				</li>
				<li>
					<NavToggle class="nav-items-toggle"/>
				</li>
			</ul>
			<MenuItems class="nav-items hidden">
				<ul class="nav-buttons">
					{ isGallery &&
						<li class="nav-button-container search-button-container">
							<Search client:only="react"/>
						</li>
					}
					<li class="nav-button-container">
						<a id="upload-button" class="nav-button button focusable" href="upload">
							<img src="/icons/nav/upload.svg" alt="Upload" class="button-icon"/>
						</a>
					</li>
					{ isGallery &&
						<li class="nav-button-container">
							<button id="bookmarks-button" class="nav-button button focusable" onclick="">
								<img src="/icons/nav/bookmark.svg" alt="Bookmarks" class="button-icon"/>
							</button>
						</li>
					}
					<li class="nav-button-container">
						<Dropdown class="group settings-dropdown">
							<button id="settings-button" class="focusable nav-button button">
								<img src="/icons/nav/settings.svg" alt="Settings" class="button-icon"/>
							</button>
							<DropdownItems class="nav-dropdown-items-container">
								<OptionsMenu client:load/>
							</DropdownItems>
						</Dropdown>
					</li>
				</ul>
			</MenuItems>
		</div>
	</Astronav>
</StickyHeader>

<script>

// function parseOptions() {
// 	const list = document.getElementById('options-list')
// 	if (!list) return

// 	for (let option of options) {
// 		if (option.type == OptionType.Toggle) {
// 			let listElem = document.createElement('li')
// 			let toggle = document.createElement('Toggle')
// 			toggle.id = option.label.toLowerCase().replace(/ /g, '-')
// 			toggle.label = option.label

// 		}
// 	}
// }
</script>